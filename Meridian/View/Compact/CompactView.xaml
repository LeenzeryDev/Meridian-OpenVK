<Window x:Class="Meridian.View.Compact.CompactView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:localization="clr-namespace:Meridian.Resources.Localization"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:controls="clr-namespace:Meridian.Controls"
        xmlns:converters="clr-namespace:Meridian.Converters"
        xmlns:behaviours="clr-namespace:Meridian.Behaviours"
        x:Name="pageRoot"
        Title="{Binding Main.WindowTitle, Source={StaticResource Locator}}" Height="268" Width="160"
        Background="{DynamicResource MainBackgroundBrush}" ShowInTaskbar="{Binding Main.ShowTrayIcon, Source={StaticResource Locator}, Converter={StaticResource InvertBoolConverter}}"
        DataContext="{Binding Main, Source={StaticResource Locator}}" Topmost="{Binding IsChecked, ElementName=pinButton}" ResizeMode="NoResize"
        MouseMove="CompactView_OnMouseMove" Loaded="CompactView_OnLoaded"
        StateChanged="CompactView_OnStateChanged">
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome NonClientFrameEdges="None" GlassFrameThickness="0,0,0,1" ResizeBorderThickness="7" CaptionHeight="0" CornerRadius="0"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="Taskbar">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo ImageSource="/Meridian;component/Resources/Images/prev_thumb.png" 
                                 Command="{Binding Main.PrevAudioCommand, Source={StaticResource Locator}}"/>
                <ThumbButtonInfo ImageSource="{Binding Main.IsPlaying, Source={StaticResource Locator}, Converter={StaticResource PlayIconConverter}}"
                                 Command="{Binding Main.PlayPauseCommand, Source={StaticResource Locator}}"/>
                <ThumbButtonInfo ImageSource="/Meridian;component/Resources/Images/next_thumb.png"
                                 Command="{Binding Main.NextAudioCommand, Source={StaticResource Locator}}"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Window.Resources>
        <converters:BooleanToValueConverter x:Key="LikeDislikeTooltipConverter" FalseValue="{x:Static localization:MainResources.ContextMenuAdd}" TrueValue="{x:Static localization:MainResources.ContextMenuRemove}"/>

        <Storyboard x:Key="TracklistTransitionIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).X">
                <DiscreteDoubleKeyFrame KeyTime="0" Value="30"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TracklistTransitionOut">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="8"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).X">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="30">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="PlayerTransitionIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).X">
                <DiscreteDoubleKeyFrame KeyTime="0" Value="-30"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PlayerTransitionOut">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="8"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).X">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-30">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Grid Background="{DynamicResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- Player view -->
        <Grid Margin="0,0,0,0">
            <Grid.RenderTransform>
                <TranslateTransform />
            </Grid.RenderTransform>
            <i:Interaction.Behaviors>
                <behaviours:VisibilityTransitionBehaviour Value="{Binding ShowTracklist, ElementName=pageRoot, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" 
                                                          AnimationIn="{StaticResource PlayerTransitionIn}" AnimationOut="{StaticResource PlayerTransitionOut}"/>
            </i:Interaction.Behaviors>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ToggleButton x:Name="pinButton" Style="{StaticResource PinButtonStyle}" ToolTip="{x:Static localization:MainResources.CompactModePin}"
                          VerticalAlignment="Top" HorizontalAlignment="Left" Width="24" Height="24" Margin="11,3,0,0"/>

            <controls:ContentTransitionControl Grid.Row="1" Margin="15,0,0,-10" VerticalAlignment="Center"
                                               Visibility="{Binding Main.CurrentAudio, Source={StaticResource Locator}, Converter={StaticResource NullToVisibilityConverter}}"
                                               Source="{Binding Main.CurrentAudio, Source={StaticResource Locator}}">
                <controls:ContentTransitionControl.ContentTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding Title}" FontWeight="Normal" FontSize="16" TextTrimming="CharacterEllipsis" MaxHeight="36"
                                   Foreground="{DynamicResource ForegroundBrush}" ToolTip="{Binding Title}">
                            </TextBlock>
                            <TextBlock Text="{Binding Artist}" FontWeight="Normal" FontSize="12" Opacity="0.7" Margin="0,0,0,0" TextTrimming="CharacterEllipsis"
                                   Foreground="{DynamicResource ForegroundBrush}" ToolTip="{Binding Artist}">
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </controls:ContentTransitionControl.ContentTemplate>
            </controls:ContentTransitionControl>

            <Grid Grid.Row="2" Margin="15,15,0,0" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,0,0,0" Width="110" Height="110">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{DynamicResource AccentBrush}" Opacity="0.6"/>
                        <Image Source="/Resources/Images/cover_default.png" Margin="35" RenderOptions.BitmapScalingMode="HighQuality" />
                        <controls:ImageTransitionControl Source="{Binding Main.TrackImage, Source={StaticResource Locator}}" RenderOptions.BitmapScalingMode="HighQuality" HorizontalContentAlignment="Center"/>
                    </Grid>
                </Border>

                <Grid Grid.Column="1" Margin="-2,0,-3,0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ToggleButton VerticalAlignment="Top" Width="32" Height="32" Padding="10" Margin="1,-10,0,0" IsChecked="{Binding Main.CurrentAudio.IsAddedByCurrentUser, Mode=OneWay, Source={StaticResource Locator}}" Style="{StaticResource LikeDislikeButtonStyle}"
                          ToolTip="{Binding Main.CurrentAudio.IsAddedByCurrentUser, Source={StaticResource Locator}, Converter={StaticResource LikeDislikeTooltipConverter}}"
                          Command="{Binding Main.AddRemoveAudioCommand, Source={StaticResource Locator}}" CommandParameter="{Binding Main.CurrentAudio, Source={StaticResource Locator}}"
                          IsEnabled="{Binding Main.CanBroadcast, Source={StaticResource Locator}}">
                        <ToggleButton.RenderTransform>
                            <TranslateTransform />
                        </ToggleButton.RenderTransform>
                    </ToggleButton>
                    <ToggleButton Grid.Row="1" VerticalAlignment="Center" Width="32" Height="32" Margin="0,0,0,0" IsChecked="{Binding Main.Shuffle, Mode=TwoWay, Source={StaticResource Locator}}" Style="{StaticResource ShuffleButtonStyle}"
                          ToolTip="{x:Static localization:MainResources.Shuffle}" Foreground="{StaticResource ForegroundBrush}">
                        <ToggleButton.RenderTransform>
                            <TranslateTransform />
                        </ToggleButton.RenderTransform>
                    </ToggleButton>
                    <ToggleButton VerticalAlignment="Bottom" Grid.Row="2" Width="32" Height="32" Margin="0,0,0,-10" IsChecked="{Binding Main.Repeat, Mode=TwoWay, Source={StaticResource Locator}}" Style="{StaticResource RepeatButtonStyle}"
                          ToolTip="{x:Static localization:MainResources.Repeat}" Foreground="{StaticResource ForegroundBrush}">
                        <ToggleButton.RenderTransform>
                            <TranslateTransform />
                        </ToggleButton.RenderTransform>
                    </ToggleButton>
                </Grid>
            </Grid>

            <StackPanel Margin="15,3,0,0" Grid.Row="3" Width="110" HorizontalAlignment="Left">
                <Grid VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Slider IsMoveToPointEnabled="True"
                        Value="{Binding Main.CurrentAudioPositionSeconds, Source={StaticResource Locator}, Mode=TwoWay}" Maximum="{Binding Main.CurrentAudioDuration.TotalSeconds, Source={StaticResource Locator}, Mode=OneWay}"
                        Style="{StaticResource CommonSliderStyle}" />
                    <TextBlock Text="{Binding Main.CurrentAudioPosition, Source={StaticResource Locator}, Converter={StaticResource AudioTimeSpanConverter}}" FontSize="11" Opacity="0.5" Margin="0,15,0,0" Foreground="{DynamicResource ForegroundBrush}"/>
                    <TextBlock Text="{Binding Main.CurrentAudioDuration, Source={StaticResource Locator}, Converter={StaticResource AudioTimeSpanConverter}}" FontSize="11" Opacity="0.5" Margin="0,15,0,0" HorizontalAlignment="Right" Foreground="{DynamicResource ForegroundBrush}"/>
                </Grid>

                <ToggleButton Name="TracklistButton" Cursor="Hand" IsChecked="{Binding ShowTracklist, ElementName=pageRoot, Mode=TwoWay}" Content="{x:Static localization:MainResources.CompactModeTracklist}">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <TextBlock Name="Title" Text="{TemplateBinding Content}" Foreground="{DynamicResource ForegroundBrush}" Opacity="0.7"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Title" Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </StackPanel>
        </Grid>

        <!-- Tracklist view -->
        <Grid Margin="0,0,0,0">
            <Grid.RenderTransform>
                <TranslateTransform />
            </Grid.RenderTransform>
            <i:Interaction.Behaviors>
                <behaviours:VisibilityTransitionBehaviour Value="{Binding ShowTracklist, ElementName=pageRoot, Converter={StaticResource BoolToVisibilityConverter}}" 
                                                          AnimationIn="{StaticResource TracklistTransitionIn}" AnimationOut="{StaticResource TracklistTransitionOut}"/>
            </i:Interaction.Behaviors>

            <ToggleButton IsChecked="{Binding ShowTracklist, ElementName=pageRoot, Mode=TwoWay}" Style="{StaticResource CompactBackButtonStyle}"
                          VerticalAlignment="Top" HorizontalAlignment="Left" Width="24" Height="24" Margin="8,3,0,0"/>

            <ListBox x:Name="AudioList" Margin="0,30,0,0" Padding="0,0,0,0" ItemsSource="{Binding Main.CurrentPlaylist, Source={StaticResource Locator}}" Style="{StaticResource CommonListBoxStyle}" 
                     VirtualizingStackPanel.ScrollUnit="Pixel" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemContainerStyle="{StaticResource AudioListBoxItemStyle}"
                     ItemTemplate="{StaticResource CompactAudioItemTemplate}">
                <i:Interaction.Behaviors>
                    <behaviours:AutoScrollToCurrentItemBehaviour />
                </i:Interaction.Behaviors>
            </ListBox>
        </Grid>

        <Border Grid.Row="1" Background="Transparent" MouseWheel="UIElement_OnMouseWheel" ToolTip="{Binding Main.Volume, Source={StaticResource Locator}}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  Margin="0,3,0,2" DataContext="{Binding Main, Source={StaticResource Locator}}">
                <Button Margin="0,0,7,0" Command="{Binding Main.PrevAudioCommand, Source={StaticResource Locator}}" Width="26" Height="26" Style="{StaticResource PrevButtonStyle}" Foreground="{DynamicResource ForegroundBrush}"
                    ToolTip="{x:Static localization:MainResources.PrevTrack}">
                    <Button.RenderTransform>
                        <TranslateTransform />
                    </Button.RenderTransform>
                </Button>
                <ToggleButton Width="36" Height="36" IsChecked="{Binding IsPlaying, Mode=TwoWay}" Command="{Binding Main.PlayPauseCommand, Source={StaticResource Locator}}" Style="{StaticResource PlayPauseButtonStyle}" Foreground="{DynamicResource ForegroundBrush}"
                          ToolTip="{x:Static localization:MainResources.PlayPause}">
                    <ToggleButton.RenderTransform>
                        <TranslateTransform />
                    </ToggleButton.RenderTransform>
                </ToggleButton>
                <Button Margin="7,0,0,0" Command="{Binding Main.NextAudioCommand, Source={StaticResource Locator}}" Width="26" Height="26" Style="{StaticResource NextButtonStyle}" Foreground="{DynamicResource ForegroundBrush}"
                    ToolTip="{x:Static localization:MainResources.NextTrack}">
                    <Button.RenderTransform>
                        <TranslateTransform />
                    </Button.RenderTransform>
                </Button>
            </StackPanel>
        </Border>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,5,5,5" DataContext="{Binding Main, Source={StaticResource Locator}}">
            <Button Style="{StaticResource LandscapeModeButtonStyle}" Margin="0,0,10,0" SnapsToDevicePixels="True" Command="{Binding SwitchToUIModeCommand}" CommandParameter="CompactLandscape"
                    ToolTip="{x:Static localization:MainResources.LandscapeMode}"/>
            <Button Style="{StaticResource MiniModeButtonStyle}" Margin="0,0,10,0" SnapsToDevicePixels="True" Command="{Binding SwitchUIModeCommand}"
                    ToolTip="{x:Static localization:MainResources.FullMode}" Width="20" Height="20"/>
            <Button Style="{StaticResource MinimizeButtonStyle}" VerticalAlignment="Bottom" Margin="0,0,10,0" SnapsToDevicePixels="True" ToolTip="{x:Static localization:MainResources.Minimize}"
                    Click="ButtonBase_OnClick" Width="21" Height="21"/>
            <Button Style="{StaticResource CloseButtonStyle}" SnapsToDevicePixels="True" Command="{Binding CloseWindowCommand}" ToolTip="{x:Static localization:MainResources.Close}" Margin="0,0,5,0"
                    Width="20" Height="20"/>
        </StackPanel>
    </Grid>
</Window>
